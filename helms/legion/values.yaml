rootDomain: k8s-nightly.epm.kharlamov.biz
domainDelimiter: "-"
namespace: default
enclaveName: unknown
localDomain: "cluster.local"
addLocalDomain: false
clusterName: ""

log_level: info

auth:
  enabled: false
  annotations: {}

toolchains:
  python:
    image: legion/python-toolchain:1.0

operator:
  image: legion/k8s-operator:1.0
  builder:
    image: legion/k8s-model-builder:1.0

vcs:
  enabled: false
  name: "legion"
  type: "{{ .Values.vcs.type }}"
  uri: "{{ .Values.vcs.type }}"
  defaultReference: "{{ .Values.vcs.defaultReference }}"
  creds: "{{ .Values.vcs.creds }}"

feedback:
  replicas: 1
  ingress:
    annotations: {}
    domain:
      partial: feedback
    tls:
      enabled: true
      autoSecretNameDeduction: true

  image:
    repository: "legion/k8s-fluentd"
    tag: "latest"

  s3:
    bucket: "none"
    region: "none"

    time_slice_format: "%Y%m%d%H"
    time_slice_wait: "5m"

    store_as: "json"

    buffering:
      timekey: 1m       # chunks length (window size)
      timekey_wait: 0s  # delay for flush (after end of window)
      path: /tmp

    format: "json"
    include_time_key: "true"
    time_key: "time"

edi:
  enabled: true
  replicas: 1
  image:
    repository: "legion/edi"
    tag: "latest"

  rbac: true

  k8s_api_retry_number_max_limit: 10
  k8s_api_retry_delay_sec: 3

  ingress:
    enabled: true
    annotations: {}
    domain:
      partial: edi
    tls:
      enabled: true
      autoSecretNameDeduction: true

edge:
  enabled: true
  replicas: 2
  enableHomePage: true
  image:
    repository: "legion/k8s-edge"
    tag: "latest"

  ingress:
    enabled: true
    annotations: {}
    domain:
      partial: edge
    tls:
      enabled: true
      autoSecretNameDeduction: true

metrics:
  enabled: true
  host: statsd-exporter.kube-monitoring.svc.cluster.local
  port: 9125

grafana:
  enabled: true
  adminUser: admin_user
  adminPassword: admin_password
  url: http://grafana.kube-monitoring.svc.cluster.local:80

model_resources:
  cpu: 256m
  mem: 256Mi

connections:
  docker:
    type: proxy
    # http/https
    protocol: ~
    url: ~
    user: ~
    password: ~

secrets:
  token_ttl_minutes: "120"
  max_token_ttl_minutes: ~
  token_exp_datetime: ~
