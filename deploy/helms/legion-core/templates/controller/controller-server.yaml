apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-controller"
  labels:
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    component: "{{ .Release.Name }}-controller"
spec:
  replicas: 1
  selector:
    matchLabels:
      component: "{{ .Release.Name }}-controller"
  template:
    metadata:
      labels:
        component: "{{ .Release.Name }}-controller"
    spec:
      serviceAccountName: "{{ .Release.Name }}-controller"
      containers:
      - name: controller
        image: "{{ .Values.dockerHubGroup }}/k8s-controller:{{ .Values.version }}"
        resources:
          requests:
            cpu: "200m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        env:
        # Information for building correct images
        - name: LEGION_DISTRO_VERSION
          value: "{{ .Values.version }}"
        - name: LEGION_DISTRO_DOCKER_HUB
          value: "{{ .Values.dockerHubGroup }}"
        - name: LEGION_DISTRO_PYPI_SERVER
          value: "{{ .Values.pypiServer }}"
        - name: TOOLCHAIN_BOOTUP_SCRIPT_PYTHON
          value: "{{ .Release.Name }}-bootup-python"
        # Information for pushing images
        - name: DOCKER_REGISTRY
          value: "{{ .Values.connections.docker.url }}"
        - name: DOCKER_REGISTRY_USER
          valueFrom:
            secretKeyRef:
              name: "{{ .Release.Name }}-controller"
              key: dockerRegistryUser
        - name: DOCKER_REGISTRY_PASSWORD
          valueFrom:
            secretKeyRef:
              name: "{{ .Release.Name }}-controller"
              key: dockerRegistryPassword
        ports:
        - containerPort: 5001
          name: http
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: 5001
          initialDelaySeconds: 5
          timeoutSeconds: 5
