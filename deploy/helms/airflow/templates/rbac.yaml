kind: Role
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: "{{ .Release.Name }}-airflow-worker"
rules:
- apiGroups: [""] # core API group
  resources: ["configmaps"]
  verbs: ["list", "create", "get", "patch", "update"]
- apiGroups: [""] # core API group
  resources: ["secrets"]
  verbs: ["watch", "get"]
  resourceNames: ['airflow-credentials']
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: "{{ .Release.Name }}-airflow-worker"
subjects:
- kind: ServiceAccount
  namespace: {{ .Release.Namespace }}
  name: "{{ .Release.Name }}-airflow-worker"
roleRef:
  kind: Role
  name: "{{ .Release.Name }}-airflow-worker"
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "{{ .Release.Name }}-airflow-worker"

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "{{ .Release.Name }}-airflow-scheduler"
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: admin-rbac
subjects:
  - kind: ServiceAccount
    # Reference to upper's `metadata.name`
    name:  "{{ .Release.Name }}-airflow-scheduler"
    # Reference to upper's `metadata.namespace`
    namespace: company-a
roleRef:
  kind: ClusterRole
  name: cluster-admin
apiGroup: rbac.authorization.k8s.io