apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-web"
  labels:
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    component: "{{ .Release.Name }}-scheduler"
spec:
  replicas: 1
  template:
    metadata:
      annotations:
        iam.amazonaws.com/role: "{{ .Values.clusterName }}-{{ .Values.enclave }}-airflow-role"
      labels:
        app: "{{ .Release.Name }}-web"
    spec:
      restartPolicy: Always
      serviceAccountName: "{{ .Release.Name }}-web"
      containers:
      - name: scheduler
        image: "{{ .Values.image }}"
        resources:
          requests:
            cpu: "1000m"
            memory: "1024Mi"
          limits:
            cpu: "2000m"
            memory: "2048Mi"
        env:
        - name: AIRFLOW_KUBE_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace        
        - name: POSTGRES_HOST
        {{- if .Values.postgres.external}}
          value: "{{ .Values.postgres.host }}"
        {{- else }}
          value: "{{ .Release.Name }}-postgres"
        {{- end }}
        - name: POSTGRES_PORT
          value: "{{ .Values.postgres.port }}"
        - name: REDIS_HOST
          value: "{{ .Release.Name }}-redis"
        - name: AIRFLOW_HOME
          value: "/home/airflow"
        volumeMounts:
        - name: airflow-config
          mountPath: /home/airflow/airflow.cfg
          subPath: airflow.cfg
        - name: airflow-dags
          mountPath: "{{ .Values.storage.airflow_dags_directory }}"
        - name: airflow-config-dir
          mountPath: /home/airflow/config
        args: ["airflow", "scheduler"]
      - name: webserver
        image: "{{ .Values.image }}"
        resources:
          requests:
            cpu: "400m"
            memory: "750Mi"
          limits:
            cpu: "500m"
            memory: "1200Mi"
        env:
        - name: POSTGRES_HOST
        {{- if .Values.postgres.external}}
          value: "{{ .Values.postgres.host }}"
        {{- else }}
          value: "{{ .Release.Name }}-postgres"
        {{- end }}
        - name: POSTGRES_PORT
          value: "{{ .Values.postgres.port }}"
        - name: REDIS_HOST
          value: "{{ .Release.Name }}-redis"
        - name: AIRFLOW_HOME
          value: "/home/airflow"
        - name: BOOTUP_DIRECTORY
          value: "/opt/bootup"
        - name: SECRETS_DIRECTORY
          value: "/opt/secrets"
        volumeMounts:
        - name: airflow-config
          mountPath: /home/airflow/airflow.cfg
          subPath: airflow.cfg
        - name: connections-config
          mountPath: /opt/secrets
        - name: airflow-dags
          mountPath: "{{ .Values.storage.airflow_dags_directory }}"
        - name: airflow-config-dir
          mountPath: /home/airflow/config
        ports:
        - name: web
          containerPort: 8080
        args: ["airflow", "webserver"]
        livenessProbe:
          httpGet:
            path: /admin/airflow/dag_stats
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 5
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /admin/rest_api/api?api=rest_api_plugin_version
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 5
          timeoutSeconds: 10
      volumes:
      - name: airflow-config-dir
        configMap:
          name: "{{ .Release.Name }}-log-config"
      - name: airflow-config
        secret:
          secretName: "{{ .Release.Name }}-config"
          items:
          - key: airflow.cfg
            path: airflow.cfg
      - name: connections-config
        secret:
          secretName: "{{ .Release.Name }}-connections-config"
      - name: airflow-dags
        persistentVolumeClaim:
          {{- if .Values.storage.use_specified_pvc }}
          claimName: {{ .Values.storage.pvc_name }}
          {{- else}}
          claimName: "{{ .Release.Name }}-dag-pvc"
          {{- end}}
<<<<<<< 089033394d0c6584e3514c3f1d3ef3253b1f69d9
=======
---
apiVersion: v1
kind: Service
metadata:
  name: "{{ .Release.Name }}-web"
  labels:
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    component: "{{ .Release.Name }}-web"
spec:
  selector:
    app: "{{ .Release.Name }}-web"
  ports:
    - name: web
      protocol: TCP
      port: 8080
      targetPort: web
>>>>>>> [#347] add airflow charts
